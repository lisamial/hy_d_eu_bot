import os
import psycopg2

from telegram import Update, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    MessageHandler,
    ContextTypes,
    ConversationHandler,
    filters,
)

BOT_TOKEN = os.environ.get("BOT_TOKEN_RW")
DATABASE_URL = os.getenv("DATABASE_URL")

conn = psycopg2.connect(DATABASE_URL)
cursor = conn.cursor()

# –≠—Ç–∞–ø—ã –¥–∏–∞–ª–æ–≥–∞
(HEIGHT, WEIGHT, VOLUMES, START_DATE, SELECT_TRACKERS) = range(5)

# –í—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_data = {}

# –ö–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞
TRACKER_OPTIONS = [
    ["üíß –í–æ–¥–∞", "‚ö° –ó–∞—Ä—è–¥–∫–∞"],
    ["üíä –¢–∞–±–ª–µ—Ç–∫–∏", "üçΩÔ∏è –ú–µ–Ω—é"],
    ["ü§ï –ì–æ–ª–æ–≤–Ω–∞—è –±–æ–ª—å"],
]

# START
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π –ó–û–ñ-–±–æ—Ç-–∫–æ–º–ø–∞–Ω—å–æ–Ω üí™\n\n"
        "–°–µ–π—á–∞—Å –Ω—É–∂–Ω–æ –∑–∞–ø–æ–ª–Ω–∏—Ç—å —ç—Ç—É —Å–∫—É—à–Ω—É—é —Ö–µ—Ä–Ω—é, —Ç—ã –∑–Ω–∞–µ—à—å —Ç–∏–ø–æ –≤–µ—Å, —Ä–æ—Å—Ç, —Ä–∞–∑–º–µ—Ä your ASS. \n\n"
        "–ù–∞—á–Ω–µ–º —Å —Ä–æ—Å—Ç–∞ (–≤ —Å–º)"
    )
    return HEIGHT

# HEIGHT
async def get_height(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["height"] = update.message.text
    await update.message.reply_text("–û—Ç–ª–∏—à–Ω–æ! –ê —Ç–µ–ø–µ—Ä—å —Ç–≤–æ–π –≤–µ—Å (–≤ –∫–≥)")
    return WEIGHT

# WEIGHT
async def get_weight(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["weight"] = update.message.text
    await update.message.reply_text("–°—É–ø–µ—Ä! –ù–∞–ø–∏—à–∏ —Å–≤–æ–∏ –æ–±—ä—ë–º—ã (–≥—Ä—É–¥—å/—Ç–∞–ª–∏—è/–±–µ–¥—Ä–∞)")
    return VOLUMES

# VOLUMES
async def get_volumes(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["volumes"] = update.message.text
    await update.message.reply_text("–£–∫–∞–∂–∏ –¥–∞—Ç—É —Å—Ç–∞—Ä—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: 05.08.2025)")
    return START_DATE

# START DATE
async def get_start_date(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["start_date"] = update.message.text
    await update.message.reply_text(
        "–¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏, —á—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å üìù",
        reply_markup=ReplyKeyboardMarkup(TRACKER_OPTIONS, one_time_keyboard=True, resize_keyboard=True)
    )
    return SELECT_TRACKERS

# SELECT TRACKERS
async def select_trackers(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    tracker = update.message.text

    if "trackers" not in context.user_data:
        context.user_data["trackers"] = []

    if tracker not in context.user_data["trackers"]:
        context.user_data["trackers"].append(tracker)

    await update.message.reply_text(
        f"–î–æ–±–∞–≤–ª–µ–Ω–æ: {tracker}\n\n"
        f"–ú–æ–∂–µ—à—å –≤—ã–±—Ä–∞—Ç—å –µ—â—ë –∏–ª–∏ –Ω–∞–ø–∏—à–∏ ¬´–ì–æ—Ç–æ–≤–æ¬ª, –∫–æ–≥–¥–∞ –≤—Å—ë –≤—ã–±–µ—Ä–µ—à—å"
    )
    return SELECT_TRACKERS

# DONE
async def finish_setup(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    user_data[user_id] = context.user_data.copy()

    await update.message.reply_text(
        "üéâ –ì–æ—Ç–æ–≤–æ! –Ø –∑–∞–ø–æ–º–Ω–∏–ª —Ç–≤–æ–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏ –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏.\n"
        "–°–∫–æ—Ä–æ –Ω–∞—á–Ω—ë–º –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ üíö"
    )
    return ConversationHandler.END

# CANCEL
async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞. –ù–∞–ø–∏—à–∏ /start, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ.")
    return ConversationHandler.END


if __name__ == "__main__":
    cursor.execute("SELECT version();")
    db_version = cursor.fetchone()
    print(f"‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ –±–∞–∑–µ: {db_version}")
    app = ApplicationBuilder().token(BOT_TOKEN).build()

    conv_handler = ConversationHandler(
        entry_points=[CommandHandler("start", start)],
        states={
            HEIGHT: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_height)],
            WEIGHT: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_weight)],
            VOLUMES: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_volumes)],
            START_DATE: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_start_date)],
            SELECT_TRACKERS: [
                MessageHandler(filters.Regex("^(üíß –í–æ–¥–∞|‚ö° –ó–∞—Ä—è–¥–∫–∞|üíä –¢–∞–±–ª–µ—Ç–∫–∏|üçΩÔ∏è –ú–µ–Ω—é|ü§ï –ì–æ–ª–æ–≤–Ω–∞—è –±–æ–ª—å)$"), select_trackers),
                MessageHandler(filters.TEXT & ~filters.COMMAND, finish_setup),
            ],
        },
        fallbacks=[CommandHandler("cancel", cancel)],
    )

    app.add_handler(conv_handler)
    app.run_polling()
